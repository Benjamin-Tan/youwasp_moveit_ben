<launch>

  <!-- fake central parameter server -->
  <!--<rosparam param="/all_robot_namespace">['robot0/','robot1/','robot2/','robot3/','robot4/','robot5/','robot6/','robot7','robot8/','robot9']</rosparam>-->
  <rosparam param="/all_robot_namespace">['robot0/','robot1/','robot2/','robot3/','robot4/']</rosparam>

  <arg name="sim" default="true" />
  <arg name="rviz" default="false"/>

  <arg name="use_gui" default="false" />
  <arg name="robot_id" default="0"/>
  <arg name="robot_namespace" value="robot$(arg robot_id)"/>

  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="home_position" value="{'x_joint': $(arg x), 'y_joint': $(arg y)}"/>

  <group ns="$(arg robot_namespace)">

    <param name="tf_prefix" value="$(arg robot_namespace)"/>

    <arg name="fake_controller_source_list" value="[/$(arg robot_namespace)/move_group/fake_controller_joint_states]"/>

    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <include file="$(find youwasp_moveit_ben)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <!-- If needed, broadcast static tf for robot root -->
    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 odom base_footprint 100" />
    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 base_footprint $(arg robot_namespace)/base_footprint 100" />

    <group if="$(arg sim)">
      <!-- We do not have a robot connected, so publish fake joint states -->
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="/use_gui" value="$(arg use_gui)"/>
        <rosparam param="source_list" subst_value="True">$(arg fake_controller_source_list)</rosparam>
        <rosparam param="zeros" subst_value="True">$(arg home_position)</rosparam>
      </node>
    </group>

    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
    <include file="$(find youwasp_moveit_ben)/launch/move_group.launch">
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="fake_execution" value="$(arg sim)"/>
      <arg name="info" value="true"/>
    </include>

    <!-- 8 DoF to 5 DoF conversion-->
    <include file="$(find moveit_base_arm_controller)/launch/moveit_base_arm_controller.launch" unless="$(arg sim)"/>

    <!-- planning scene constant refreshing -->
    <node name="youwasp_tf_listener" pkg="moveit_base_arm_controller" type="planning_scene_constant_refresh.py" output="screen"/>

  </group>


  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find youwasp_moveit_ben)/launch/moveit_rviz_multiple_robot.launch" if="$(arg rviz)">
    <arg name="config" value="true"/>
    <arg name="robot_id" value="$(arg robot_id)"/>
  </include>

</launch>
